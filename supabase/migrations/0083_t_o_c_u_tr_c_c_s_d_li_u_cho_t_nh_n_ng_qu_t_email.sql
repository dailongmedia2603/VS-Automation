-- Create table for Email Scan Projects
CREATE TABLE public.email_scan_projects (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
  name TEXT NOT NULL,
  creator_id UUID REFERENCES auth.users(id) ON DELETE SET NULL,
  fb_post_id TEXT,
  last_scanned_at TIMESTAMP WITH TIME ZONE
);

-- Enable RLS for security
ALTER TABLE public.email_scan_projects ENABLE ROW LEVEL SECURITY;

-- Create policies for Email Scan Projects
CREATE POLICY "Allow team access for Email Scan projects"
ON public.email_scan_projects FOR ALL
USING (true); -- Simplified for now, can be tied to permissions later


-- Create table for Email Scan Results
CREATE TABLE public.email_scan_results (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
  project_id BIGINT NOT NULL REFERENCES public.email_scan_projects(id) ON DELETE CASCADE,
  email TEXT NOT NULL,
  comment_content TEXT,
  account_name TEXT,
  account_id TEXT,
  comment_link TEXT
);

-- Enable RLS for security
ALTER TABLE public.email_scan_results ENABLE ROW LEVEL SECURITY;

-- Create policies for Email Scan Results
CREATE POLICY "Allow access via parent project on email_scan_results"
ON public.email_scan_results FOR ALL
USING (
  EXISTS (
    SELECT 1
    FROM public.email_scan_projects
    WHERE id = email_scan_results.project_id
  )
);

-- Function to get email scan projects with stats
CREATE OR REPLACE FUNCTION public.get_email_scan_projects_with_creator()
RETURNS TABLE(
  id bigint,
  name text,
  created_at timestamp with time zone,
  creator_id uuid,
  creator_name text,
  creator_email text,
  results_count bigint
)
LANGUAGE sql
SECURITY DEFINER
AS $$
  SELECT
    p.id,
    p.name,
    p.created_at,
    p.creator_id,
    u.raw_user_meta_data ->> 'full_name' as creator_name,
    u.email as creator_email,
    COUNT(esr.id) as results_count
  FROM public.email_scan_projects p
  LEFT JOIN auth.users u ON p.creator_id = u.id
  LEFT JOIN public.email_scan_results esr ON p.id = esr.project_id
  GROUP BY p.id, u.id
  ORDER BY p.created_at DESC;
$$;